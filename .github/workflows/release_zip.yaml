name: Release Branch Update

on:
  pull_request:
    branches:
    - main

jobs:
  update-release-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure we can manipulate branches

      - name: Get Latest Release Info
        id: get_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          ASSET_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.assets[0].browser_download_url')
          RELEASE_NAME=$(basename "$ASSET_URL" .zip)  # Extracts the filename without .zip

          echo "LATEST_RELEASE=${LATEST_RELEASE}" >> $GITHUB_ENV
          echo "ASSET_URL=${ASSET_URL}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV

      - name: Download Release ZIP
        run: |
          curl -L -o "${{ env.RELEASE_NAME }}.zip" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${{ env.ASSET_URL }}"

      - name: Rename Folder Structure
        run: |
          unzip "${{ env.RELEASE_NAME }}.zip" -d extracted_files
          ls -l extracted_files
          ORIGINAL_FOLDER=$(ls extracted_files)
          NEW_FOLDER=$(echo "$ORIGINAL_FOLDER" | sed -E "s/-${{ env.LATEST_RELEASE }}//")
          mv "extracted_files/$ORIGINAL_FOLDER" "extracted_files/release"
          mkdir -p release
          mv extracted_files/release release
          cd final_structure
          zip -r ../release.zip *
          cd ..
          ls -l

      - name: Update `release` Branch
        run: |
          git checkout --orphan release
          git rm -rf .  # Remove all files to ensure a clean slate
          git clean -fd
          git add release.zip
          git commit -m "Add latest release ZIP with renamed folder structure"
          git push origin release --force